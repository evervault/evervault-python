Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _randomSeed = _interopRequireDefault(require("random-seed"));

var _lodash = _interopRequireDefault(require("lodash.defaults"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Adjectives used by haikunator
 */
var defaultAdjectives = ['aged', 'ancient', 'autumn', 'billowing', 'bitter', 'black', 'blue', 'bold', 'broad', 'broken', 'calm', 'cold', 'cool', 'crimson', 'curly', 'damp', 'dark', 'dawn', 'delicate', 'divine', 'dry', 'empty', 'falling', 'fancy', 'flat', 'floral', 'fragrant', 'frosty', 'gentle', 'green', 'hidden', 'holy', 'icy', 'jolly', 'late', 'lingering', 'little', 'lively', 'long', 'lucky', 'misty', 'morning', 'muddy', 'mute', 'nameless', 'noisy', 'odd', 'old', 'orange', 'patient', 'plain', 'polished', 'proud', 'purple', 'quiet', 'rapid', 'raspy', 'red', 'restless', 'rough', 'round', 'royal', 'shiny', 'shrill', 'shy', 'silent', 'small', 'snowy', 'soft', 'solitary', 'sparkling', 'spring', 'square', 'steep', 'still', 'summer', 'super', 'sweet', 'throbbing', 'tight', 'tiny', 'twilight', 'wandering', 'weathered', 'white', 'wild', 'winter', 'wispy', 'withered', 'yellow', 'young'];
/**
 * Nouns used by haikunator
 */

var defaultNouns = ['art', 'band', 'bar', 'base', 'bird', 'block', 'boat', 'bonus', 'bread', 'breeze', 'brook', 'bush', 'butterfly', 'cake', 'cell', 'cherry', 'cloud', 'credit', 'darkness', 'dawn', 'dew', 'disk', 'dream', 'dust', 'feather', 'field', 'fire', 'firefly', 'flower', 'fog', 'forest', 'frog', 'frost', 'glade', 'glitter', 'grass', 'hall', 'hat', 'haze', 'heart', 'hill', 'king', 'lab', 'lake', 'leaf', 'limit', 'math', 'meadow', 'mode', 'moon', 'morning', 'mountain', 'mouse', 'mud', 'night', 'paper', 'pine', 'poetry', 'pond', 'queen', 'rain', 'recipe', 'resonance', 'rice', 'river', 'salad', 'scene', 'sea', 'shadow', 'shape', 'silence', 'sky', 'smoke', 'snow', 'snowflake', 'sound', 'star', 'sun', 'sun', 'sunset', 'surf', 'term', 'thunder', 'tooth', 'tree', 'truth', 'union', 'unit', 'violet', 'voice', 'water', 'waterfall', 'wave', 'wildflower', 'wind', 'wood'];

/**
 * Default options used by haikunate method
 */
var defaultOptions = {
  delimiter: '-',
  tokenLength: 4,
  tokenHex: false,
  tokenChars: '0123456789'
};

var Haikunator =
/*#__PURE__*/
function () {
  /**
   * Initialize new haikunator
   */
  function Haikunator() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Haikunator);

    this.adjectives = options.adjectives || defaultAdjectives;
    this.nouns = options.nouns || defaultNouns;
    this.random = _randomSeed["default"].create(options.seed);
    this.config = (0, _lodash["default"])(options.defaults, defaultOptions);
  }
  /**
   * Generate heroku-like random names
   */


  _createClass(Haikunator, [{
    key: "haikunate",
    value: function haikunate(options) {
      // set specified options
      var config = (0, _lodash["default"])(options, this.config); // set tokenChars if tokenHex is set

      if (config.tokenHex === true) {
        config.tokenChars = '0123456789abcdef';
      } // pick adjective and noun


      var adjective = this._randomElement(this.adjectives);

      var noun = this._randomElement(this.nouns); // create random token


      if (!config.tokenLength) config.tokenLength = 0;
      var token = '';

      for (var i = 0; i < config.tokenLength; i++) {
        token += this._randomElement(config.tokenChars);
      } // create result and return


      var sections = [adjective, noun, token];
      return sections.filter(function (e) {
        return !!e;
      }).join(config.delimiter);
    }
    /**
     * Get a random element from an array/string
     * @param {(string|Array)} array
     * @returns {*}
     * @private
     */

  }, {
    key: "_randomElement",
    value: function _randomElement(array) {
      if (!array) return undefined;
      return array[this.random(array.length)];
    }
  }]);

  return Haikunator;
}();

exports["default"] = Haikunator;
module.exports = exports.default;
//# sourceMappingURL=index.js.map
